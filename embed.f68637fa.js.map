{"version":3,"sources":["config/Widgets.ts","utils/helper.ts","config/Routes.ts","utils/messenger.ts","embed.ts"],"names":[],"mappings":"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","file":"embed.f68637fa.js","sourceRoot":"../src","sourcesContent":["export const EMBED_SCRIPT = `<script async src=\"${process.env.EMBED_URL}/embed.js\"></script>`\nexport const EXAMPLE_TRIP = 'https://www.outguided.com/experiences/24-hours-in-browns-canyon-deluxe-overnight-camping-experience-like-nothing-out-there-granite'","import { EMBED_SCRIPT } from 'src/config/Widgets'\nimport { SnippetLinkFunction } from 'src/types'\n\nexport const escapeRegExp = (string: string) => string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n\nexport const getSnippetLink: SnippetLinkFunction = (url, label = 'Powered by outguided.com', { data = {}, withEmbedCode } = {}) => {\n  const attributeString = Object.keys({ ...data, widget: '' })\n    .map((key) => ` data-og-${key}${data[key] ? `=\"${data[key]}\"` : ''}`)\n    .join('')\n  return `<a href=\"${url}\"${attributeString}>${label}</a>${withEmbedCode ? EMBED_SCRIPT : ''}`\n}\n\nexport const getId = () => String(Date.now().toString(32) + Math.random().toString(16)).replace(/\\./g, '')\n","import { escapeRegExp } from 'src/utils/helper'\n\nexport const TRIP_PAGE = '/experiences/:slug'\nexport const HOST_PAGE = '/guides/:slug'\nexport const getTripSlugFromUrl = (url: string) => url.match(new RegExp(`^${escapeRegExp(getExternalUrl())}${TRIP_PAGE.replace(':slug', '([^/\\?]+)')}`))?.[1]\nexport const getHostSlugFromUrl = (url: string) => url.match(new RegExp(`^${escapeRegExp(getExternalUrl())}${HOST_PAGE.replace(':slug', '([^/\\?]+)')}`))?.[1]\nexport const tripLink = (slug?: string) => TRIP_PAGE.replace(':slug', slug ?? '')\nexport const hostLink = (slug?: string) => HOST_PAGE.replace(':slug', slug ?? '')\nexport const getEmbedPath = (path: string) => `/embed${path}`\nexport const getEmbedSnippetPath = (path: string) => `/code${path}`\nexport const getEmbedUrl = (path?: string) => `${process.env.EMBED_URL}${path ? `/#${getEmbedPath(path)}` : ''}`\nexport const getEmbedSnippetUrl = (path?: string) => `${process.env.EMBED_URL}${path ? `/#${getEmbedSnippetPath(path)}` : ''}`\nexport const getExternalUrl = (path: string = '') => `${process.env.SITE_URL}${path}`\n","import { MessageListenerCallback, MessageSender } from 'src/types'\n\nexport const send: MessageSender = (data, options) => {\n  const { target, targetOrigin = '*' } = options ?? {}\n  ;(target || window).postMessage(data, targetOrigin)\n}\n\nexport const register = (listener: MessageListenerCallback) => {\n  window.addEventListener('message', listener, false)\n}\n\nexport const unregister = (listener: MessageListenerCallback) => {\n  window.removeEventListener('message', listener, false)\n}\n","import { getEmbedSnippetUrl, getEmbedUrl, getExternalUrl, getHostSlugFromUrl, getTripSlugFromUrl, hostLink, tripLink } from './config/Routes'\nimport { EmbedCopyMessage, EmbedMessage, EmbedSizeMessage, MessageListenerCallback } from './types'\nimport { getId } from './utils/helper'\nimport { register } from './utils/messenger'\ndeclare global {\n  interface Window {\n    OGWidgets: {\n      processedWidgets: HTMLAnchorElement[]\n      listenerCallbacks: MessageListenerCallback[]\n      listenerRegistered: boolean\n      registerListener: () => void\n      getWidgetCallbackUrl: (element: HTMLAnchorElement) => string | undefined\n      createIframe: (src: string) => HTMLIFrameElement\n      initializeWidget: (element: HTMLAnchorElement) => void\n      addListenerCallback: (listener: MessageListenerCallback) => void\n      getWidgetListenerCallback: (iframe: HTMLIFrameElement) => MessageListenerCallback\n      init: () => void\n    }\n  }\n}\nconst IFRAME_STYLES = {\n  border: 'none',\n  width: '0px',\n  height: '0px',\n  'overflow-x': 'hidden',\n  'overflow-y': 'hidden',\n  display: 'block',\n} as { [key: string]: string }\n\nconst IFRAME_ATTRIBUTES = {\n  scrolling: 'no',\n  frameborder: '0',\n  allowtransparency: 'true',\n  allowfullscreen: 'true',\n} as { [key: string]: string }\n\n;(function (window) {\n  const OGWidgets = {\n    processedWidgets: [],\n    listenerCallbacks: [],\n    listenerRegistered: false,\n    init: function () {\n      this.registerListener()\n      const widgets = document.querySelectorAll(`a[data-og-widget][href^=\"${getExternalUrl()}\"]`) as NodeListOf<HTMLAnchorElement>\n      widgets.forEach(this.initializeWidget.bind(this))\n    },\n\n    registerListener: function () {\n      if (!this.listenerRegistered) {\n        register((ev) => {\n          this.listenerCallbacks.forEach((listener) => listener(ev))\n        })\n        this.listenerRegistered = true\n      }\n    },\n    addListenerCallback: function (listener) {\n      this.listenerCallbacks.push(listener)\n    },\n    initializeWidget: function (element) {\n      if (this.processedWidgets.includes(element)) {\n        return\n      }\n      this.processedWidgets.push(element)\n\n      const url = this.getWidgetCallbackUrl(element)\n      if (!url) {\n        return\n      }\n\n      const iframe = this.createIframe(url)\n\n      iframe.onload = () => {\n        element.remove()\n      }\n      element.after(iframe)\n      this.addListenerCallback(this.getWidgetListenerCallback(iframe))\n    },\n    getWidgetCallbackUrl: function (element) {\n      let url\n      const {\n        href,\n        dataset: { ogCode },\n      } = element\n      if (getTripSlugFromUrl(href)) {\n        url = tripLink(getTripSlugFromUrl(href))\n      } else if (getHostSlugFromUrl(href)) {\n        url = hostLink(getHostSlugFromUrl(href))\n      }\n      return url ? (typeof ogCode !== 'undefined' ? getEmbedSnippetUrl(url) : getEmbedUrl(url)) : null\n    },\n    createIframe: function (src) {\n      let iframe: HTMLIFrameElement\n      try {\n        iframe = document.createElement('<iframe name=\"' + getId() + '\"></iframe>') as HTMLIFrameElement\n      } catch (e) {\n        iframe = document.createElement('iframe')\n        iframe.name = getId()\n      }\n      iframe.src = src\n      Object.keys(IFRAME_ATTRIBUTES).forEach((attribute) => iframe.setAttribute(attribute, IFRAME_ATTRIBUTES[attribute]))\n      Object.keys(IFRAME_STYLES).forEach((style) => iframe.style.setProperty(style, IFRAME_STYLES[style]))\n      return iframe\n    },\n    getWidgetListenerCallback: function (iframe) {\n      return (event) => {\n        const {\n          origin,\n          data: { type, name },\n        } = event as MessageEvent<EmbedMessage>\n        console.log('event received from iframe', event.data)\n        if (getEmbedUrl().startsWith(origin) && iframe.name === name) {\n          switch (type) {\n            case 'size':\n              const { width, height } = event.data as EmbedSizeMessage\n              iframe.style.height = height + 'px'\n              iframe.style.width = width + 'px'\n              break\n            case 'copy':\n              const { text } = event.data as EmbedCopyMessage\n              console.log('copy text', text)\n              window.navigator.clipboard.writeText(text)\n              break\n            default:\n              console.log(event.data)\n              break\n          }\n        }\n      }\n    },\n  } as Window['OGWidgets']\n\n  if (!window.OGWidgets) {\n    OGWidgets.init()\n    window.onload = () => OGWidgets.init()\n    window.OGWidgets = OGWidgets\n  }\n})(window)\n"]}