{"version":3,"sources":["config/Routes.ts","embed.ts"],"names":[],"mappings":"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","file":"embed.f68637fa.js","sourceRoot":"../src","sourcesContent":["export const TRIP_PAGE = '/experiences/:slug'\nexport const HOST_PAGE = '/guides/:slug'\nexport const tripLink = (slug: string) => TRIP_PAGE.replace(':slug', slug)\nexport const hostLink = (slug: string) => HOST_PAGE.replace(':slug', slug)\nexport const getEmbedPath = (path: string) => `/embed${path}`\nexport const getEmbedUrl = (path?: string) => `${process.env.EMBED_URL}${path ? `/#${getEmbedPath(path)}` : ''}`\nexport const getExternalUrl = (path: string = '') => `${process.env.SITE_URL}${path}`\n","import { getEmbedUrl, getExternalUrl, hostLink, tripLink } from './config/Routes'\nimport { EmbedMessage, EmbedSizeMessage } from './types'\ndeclare global {\n    interface Window {\n        OGWidgets: {\n            init: () => void\n        }\n    }\n}\n\n;(function (window) {\n    window.onload = () => {\n        const elements = document.querySelectorAll(\n            '[data-og-widget]:not([data-og-initialized])'\n        ) as NodeListOf<HTMLElement>\n\n        elements.forEach((element) => {\n            element.setAttribute('data-og-initialized', '1')\n            const { ogWidget, ogTrip, ogGuide } = element.dataset\n            if (!ogWidget) {\n                return\n            }\n            let url\n            switch (ogWidget) {\n                case 'trip':\n                    url = ogTrip && getEmbedUrl(tripLink(ogTrip))\n                    break\n                case 'guide':\n                    url = ogGuide && getEmbedUrl(hostLink(ogGuide))\n                    break\n            }\n\n            if (!url) {\n                return\n            }\n\n            const href = element.getAttribute('href')\n            if (!href?.startsWith(getExternalUrl())) {\n                return\n            }\n\n            const iframe = document.createElement('iframe')\n            iframe.src = url\n            iframe.style.border = 'none'\n            iframe.style.overflowX = 'hidden'\n            iframe.style.overflowY = 'hidden'\n            iframe.style.display = 'block'\n\n            window?.addEventListener(\n                'message',\n                (event) => {\n                    if (getEmbedUrl().startsWith(event.origin)) {\n                        const { type } = event.data as EmbedMessage\n                        switch (type) {\n                            case 'size':\n                                const { width, height } = event.data as EmbedSizeMessage\n                                iframe.style.height = height + 'px'\n                                iframe.style.width = width + 'px'\n                                break\n                            case 'other':\n                                console.log('other event')\n                                break\n                        }\n                    }\n                },\n                false\n            )\n            element.after(iframe)\n            element.style.display = 'none'\n        })\n    }\n})(window)\n"]}