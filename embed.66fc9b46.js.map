{"version":3,"sources":["config/Routes.ts","embed.ts"],"names":[],"mappings":";AAKO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,QAAA,SAAA,QAAA,gBAAA,QAAA,aAAA,QAAA,UAAA,QAAA,eAAA,EALA,IAAM,EAAY,qBAKlB,QAAA,UAAA,EAJA,IAAM,EAAY,gBAIlB,QAAA,UAAA,EAHA,IAAM,EAAW,SAAC,GAAiB,OAAA,EAAU,QAAQ,QAAS,IAG9D,QAAA,SAAA,EAFA,IAAM,EAAW,SAAC,GAAiB,OAAA,EAAU,QAAQ,QAAS,IAE9D,QAAA,SAAA,EADA,IAAM,EAAe,SAAC,GAAiB,MAAA,SAAA,OAAS,IAChD,QAAA,aAAA,EAAA,IAAM,EAAkB,SAAC,GAAsB,YAAtB,IAAA,IAAA,EAAA,IAAsB,GAAA,OAAuB,yBAAA,OAAG,IAAzE,QAAA,gBAAA;;ACJN,aADD,IAAA,EAAA,QAAA,mBAEI,SAAS,iBAAiB,mBAAoB,WACzB,SAAS,iBACtB,+CAGK,QAAQ,SAAC,GACd,QAAQ,IAAI,GACZ,EAAQ,aAAa,sBAAuB,KACtC,IAAA,EAAgC,EAAQ,QAAtC,EAAQ,EAAA,SAAE,EAAM,EAAA,OAAE,EAAO,EAAA,QACjC,GAAK,EAAL,CAGA,IAAI,EACJ,OAAQ,GACJ,IAAK,OACD,EAAM,IAAU,EAAA,EAAA,kBAAgB,EAAA,EAAA,eAAa,EAAA,EAAA,UAAS,KACtD,MACJ,IAAK,QACD,EAAM,IAAW,EAAA,EAAA,kBAAgB,EAAA,EAAA,eAAa,EAAA,EAAA,UAAS,KAG/D,GAAK,EAAL,CAGA,QAAQ,IAAI,GACZ,IAAM,EAAO,EAAQ,aAAa,SAC7B,MAAA,OAAI,EAAJ,EAAM,YAAW,EAAA,EAAA,sBAClB,QAAQ,IAAI,6BAA8B,MAAA,OAAI,EAAJ,EAAM,YAAW,EAAA,EAAA,qBAE/D,IAAI,EAAS,SAAS,cAAc,UACpC,EAAO,IAAM,EACb,EAAO,MAAM,OAAS,OACtB,EAAO,MAAM,UAAY,SACzB,EAAO,MAAM,UAAY,SACzB,EAAO,MAAM,QAAU,QAEvB,EAAO,OAAS,WArC3B,IAAA,EAAA,EAAA,EAsCqB,EAA8B,QAArB,EAAA,MAAA,OAAM,EAAN,EAAQ,qBAAa,IAAA,OAAA,EAAA,EAAE,SAAS,KAAK,aAC9C,EAA8D,QAAtD,EAAqB,QAArB,EAAA,MAAA,OAAM,EAAN,EAAQ,qBAAa,IAAA,OAAA,EAAA,EAAE,SAAS,eAAe,eAAO,IAAA,OAAA,EAAA,EAAE,SAAS,GAAG,YAC9E,IACA,EAAO,MAAM,OAAS,EAAS,EAAI,MAEnC,IACA,EAAO,MAAM,MAAQ,EAAQ,EAAI,OAGzC,EAAQ,MAAM,GACd,EAAQ","file":"embed.66fc9b46.js","sourceRoot":"../src","sourcesContent":["export const TRIP_PAGE = '/experiences/:slug'\nexport const HOST_PAGE = '/guides/:slug'\nexport const tripLink = (slug: string) => TRIP_PAGE.replace(':slug', slug)\nexport const hostLink = (slug: string) => HOST_PAGE.replace(':slug', slug)\nexport const getEmbedPath = (path: string) => `/embed${path}`\nexport const getExternalLink = (path: string = '') => `${process.env.SITE_URL}${path}`\n","import { getEmbedPath, getExternalLink, hostLink, tripLink } from './config/Routes'\n;(function () {\n    document.addEventListener('DOMContentLoaded', () => {\n        const elements = document.querySelectorAll(\n            '[data-og-widget]:not([data-og-initialized])'\n        ) as NodeListOf<HTMLElement>\n\n        elements.forEach((element) => {\n            console.log(element)\n            element.setAttribute('data-og-initialized', '1')\n            const { ogWidget, ogTrip, ogGuide } = element.dataset\n            if (!ogWidget) {\n                return\n            }\n            let url\n            switch (ogWidget) {\n                case 'trip':\n                    url = ogTrip && getExternalLink(getEmbedPath(tripLink(ogTrip)))\n                    break\n                case 'guide':\n                    url = ogGuide && getExternalLink(getEmbedPath(hostLink(ogGuide)))\n                    break\n            }\n            if (!url) {\n                return\n            }\n            console.log(url)\n            const href = element.getAttribute('href')\n            if (!href?.startsWith(getExternalLink())) {\n                console.log('external link dont match: ', href?.startsWith(getExternalLink()))\n            }\n            var iframe = document.createElement('iframe')\n            iframe.src = url\n            iframe.style.border = 'none'\n            iframe.style.overflowX = 'hidden'\n            iframe.style.overflowY = 'hidden'\n            iframe.style.display = 'block'\n\n            iframe.onload = () => {\n                const height = iframe?.contentWindow?.document.body.scrollHeight\n                const width = iframe?.contentWindow?.document.getElementById('root')?.children[0].scrollWidth\n                if (height) {\n                    iframe.style.height = height + 1 + 'px'\n                }\n                if (width) {\n                    iframe.style.width = width + 3 + 'px'\n                }\n            }\n            element.after(iframe)\n            element.remove()\n        })\n    })\n})()\n"]}